# Improved, safe-to-run version of your workflow. Kept behavior but cleaned, consolidated, and made more resilient.
# - Preserves schedule every 5 minutes and push->master trigger.
# - Enables PRs (all branches) and manual dispatch.
# - Uses setup-python pip cache, combined pip installs, robust apt installs, and best-effort Cloudflare WARP steps.
# - Uploads screenshots artifact even on failure.
name: CI

on:
  schedule:
    - cron: "*/5 * * * *"
  push:
    branches: [ master ]
  pull_request: # triggers on pull requests for all branches
  workflow_dispatch:

concurrency:
  group: cisaffea
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build & Selenium tests
    runs-on: ${{ matrix.os }}
    timeout-minutes: 600
    env:
      PY_COLORS: "1"
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.13"]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python (with pip cache)
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set locale & install base system deps
      run: |
        sudo DEBIAN_FRONTEND=noninteractive apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
          tzdata locales curl gnupg lsb-release apt-transport-https ca-certificates
        sudo locale-gen en_US.UTF-8
        sudo update-locale LANG="en_US.UTF-8"
        export LANG=en_US.UTF-8
        locale -a || true
      shell: bash

    - name: Install Google Chrome (stable)
      run: |
        curl -fsSL https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] https://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends google-chrome-stable
      shell: bash

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --upgrade seleniumbase pyautogui pymongo python-xlib
      shell: bash

    - name: Check the console scripts interface
      run: |
        command -v seleniumbase || true
        seleniumbase --version || true
        command -v sbase || true
      shell: bash

    - name: Install chromedriver (seleniumbase)
      run: |
        seleniumbase install chromedriver
      shell: bash

    - name: Install Cloudflare WARP (best-effort)
      run: |
        set -e
        # Add Cloudflare's repo and key
        curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
        sudo apt-get update
        sudo apt-get install -y cloudflare-warp || true
        # Register & connect (best-effort - may require credentials; non-fatal)
        sudo warp-cli --accept-tos registration new || true
        sudo warp-cli --accept-tos connect || true
        sleep 5
        sudo warp-cli --accept-tos status || true
      shell: bash

    - name: Run python dresda.py --debug
      run: |
        set -o pipefail
        python dresda.py --debug --chrome --xvfb --screenshot
      shell: bash

    - name: Upload screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: seleniumbase-screenshots
        path: ./latest_logs/
